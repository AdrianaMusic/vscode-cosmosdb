body {
    font-family: Arial, Helvetica, sans-serif;
    background: #1e1e1e;
    color: white;
}

* {
    box-sizing: content-box;
}

[disabled] {
    opacity: 0.7;
}

h1 {
    color: white;
    font-weight: 100;
}

h5 {
    margin-bottom: 0;
    color: white;

}

/* the graph itself (in SVG) */
.vertex {
    fill: #0072c6;
    stroke: #888;
    stroke-width: 1px;
}

.edge {
    stroke: #777;
    stroke-width: 1px;
}

.label {
    fill: #eee;
    /* stroke: #777;
    stroke-width: 2px; */
}

#resultsBackground {
    background: #222;
    width:1200px;
    height:500px;
}

.error {
    font-family: arial;
    background: black;
    color: #ff4040;
    border: #ff4040 1px solid;
    width: 100%;
    height: 100px;
    font-size: 12pt;
}

#queryStatus {
    margin-top: 10px;
    margin-bottom: 4px;
}

#debug h5 {
    color: red;
}

#queryInput {
    font-size: 12pt;
    width: 50%;
    height: 25px;
    border: 0;
    padding: 10px 15px;
    background: #333;
    color: white;
}

button {
    background: #0e639c;
    color: white;
    padding: 10px 25px;
    border: 0;
    height: 25px;
    cursor: pointer;
}

button:active {
    background: #0b4f7d;
}

#executeButton {
    margin-left: 5px
}

.watermark {
    text-align: center;
}

#jsonResults {
    width: 100%;
    height: 100%;
}

/* Style radio buttons to look like underlined toggles */
.toggle-radio-buttons input[type="radio"] {
    /* Don't set display:none because that will mess up accessibility */
    width: 0;
}

.toggle-radio-buttons {
    margin-bottom: 5px;
}

.toggle-radio-buttons label {
    color:#aaa;
    padding-bottom: 3px;
    border-bottom: 3px transparent solid;
}

.toggle-radio-buttons input[type="radio"] + label {
    width: 3em;
    cursor: pointer;
}

.toggle-radio-buttons input[type="radio"]:checked:not([disabled]) + label {
    color:white;
    padding-bottom: 3px;
    border-bottom-color:  #0072c6;
}

#jsonResults {
    height: -webkit-fill-available;
    background: transparent;
    color: white;
    border: 0;
}

/* Handle visibility of sections depending on current state */

#states:not(.state-empty) #queryWatermark {
    display:none;
}

#states:not(.state-error) #queryError {
    display: none;
}

#states:not(.state-querying) #queryStatus {
    visibility: hidden;
}

#states:not(.state-results) #radioButtons {
    visibility: hidden;
}

#states:not(.state-results) #resultsSection {
    display: none;
}

#states:not(.state-graph-results) #graphSection svg {
    display: none;
}

#states.state-graph-results #graph-watermark {
    display: none;
}

#graphSection:not(.active) {
    display:none;
}

#jsonSection:not(.active) {
    display:none;
}
