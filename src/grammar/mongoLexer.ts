// Generated from ./grammar/mongo.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class mongoLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly Comment=9;
	public static readonly SingleLineComment=10;
	public static readonly MultiLineComment=11;
	public static readonly NullLiteral=12;
	public static readonly BooleanLiteral=13;
	public static readonly DecimalLiteral=14;
	public static readonly LineTerminator=15;
	public static readonly SEMICOLON=16;
	public static readonly DOT=17;
	public static readonly DB=18;
	public static readonly LF=19;
	public static readonly CRLF=20;
	public static readonly STRING_LITERAL=21;
	public static readonly QUOTED_STRING_LITERAL=22;
	public static readonly WHITESPACE=23;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "Comment", 
		"SingleLineComment", "MultiLineComment", "NullLiteral", "BooleanLiteral", 
		"DecimalLiteral", "LineTerminator", "SEMICOLON", "DOT", "DB", "LF", "CRLF", 
		"STRING_LITERAL", "QUOTED_STRING_LITERAL", "STRING_ESCAPE", "DecimalIntegerLiteral", 
		"ExponentPart", "DecimalDigit", "WHITESPACE"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'('", "')'", "'{'", "','", "'}'", "'['", "']'", "':'", undefined, 
		undefined, undefined, "'null'", undefined, undefined, undefined, "';'", 
		"'.'", "'db'", "'\n'", "'\r\n'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "Comment", "SingleLineComment", "MultiLineComment", 
		"NullLiteral", "BooleanLiteral", "DecimalLiteral", "LineTerminator", "SEMICOLON", 
		"DOT", "DB", "LF", "CRLF", "STRING_LITERAL", "QUOTED_STRING_LITERAL", 
		"WHITESPACE"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(mongoLexer._LITERAL_NAMES, mongoLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return mongoLexer.VOCABULARY;
	}


		private isExternalIdentifierText(text) {
			return text === 'db';
		}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(mongoLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "mongo.g4"; }

	@Override
	public get ruleNames(): string[] { return mongoLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return mongoLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return mongoLexer.modeNames; }

	@Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 20:
			return this.STRING_LITERAL_sempred(_localctx, predIndex);
		}
		return true;
	}
	private STRING_LITERAL_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return !this.isExternalIdentifierText(this.text);
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x19\xCE\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03"+
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x05\n"+
		"L\n\n\x03\v\x03\v\x03\v\x03\v\x07\vR\n\v\f\v\x0E\vU\v\v\x03\v\x03\v\x03"+
		"\f\x03\f\x03\f\x03\f\x07\f]\n\f\f\f\x0E\f`\v\f\x03\f\x03\f\x03\f\x03\f"+
		"\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03"+
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x05\x0Eu\n\x0E\x03\x0F\x03\x0F\x03"+
		"\x0F\x07\x0Fz\n\x0F\f\x0F\x0E\x0F}\v\x0F\x03\x0F\x05\x0F\x80\n\x0F\x03"+
		"\x0F\x03\x0F\x06\x0F\x84\n\x0F\r\x0F\x0E\x0F\x85\x03\x0F\x05\x0F\x89\n"+
		"\x0F\x03\x0F\x03\x0F\x05\x0F\x8D\n\x0F\x05\x0F\x8F\n\x0F\x03\x10\x03\x10"+
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13"+
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x06\x16\xA3\n"+
		"\x16\r\x16\x0E\x16\xA4\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x07\x17"+
		"\xAC\n\x17\f\x17\x0E\x17\xAF\v\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03"+
		"\x18\x03\x19\x03\x19\x03\x19\x07\x19\xB9\n\x19\f\x19\x0E\x19\xBC\v\x19"+
		"\x05\x19\xBE\n\x19\x03\x1A\x03\x1A\x05\x1A\xC2\n\x1A\x03\x1A\x06\x1A\xC5"+
		"\n\x1A\r\x1A\x0E\x1A\xC6\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C"+
		"\x03^\x02\x02\x1D\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02"+
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02"+
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'"+
		"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x021\x02\x023\x02\x025\x02\x02"+
		"7\x02\x19\x03\x02\n\x05\x02\f\f\x0F\x0F\u202A\u202B\t\x02\v\f\"\"$$*+"+
		"00<=^^\x04\x02$$^^\x03\x023;\x04\x02GGgg\x04\x02--//\x03\x022;\x04\x02"+
		"\v\v\"\"\xDC\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03"+
		"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02"+
		"\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02"+
		"\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02"+
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02"+
		"\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02"+
		"\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-"+
		"\x03\x02\x02\x02\x027\x03\x02\x02\x02\x039\x03\x02\x02\x02\x05;\x03\x02"+
		"\x02\x02\x07=\x03\x02\x02\x02\t?\x03\x02\x02\x02\vA\x03\x02\x02\x02\r"+
		"C\x03\x02\x02\x02\x0FE\x03\x02\x02\x02\x11G\x03\x02\x02\x02\x13K\x03\x02"+
		"\x02\x02\x15M\x03\x02\x02\x02\x17X\x03\x02\x02\x02\x19f\x03\x02\x02\x02"+
		"\x1Bt\x03\x02\x02\x02\x1D\x8E\x03\x02\x02\x02\x1F\x90\x03\x02\x02\x02"+
		"!\x94\x03\x02\x02\x02#\x96\x03\x02\x02\x02%\x98\x03\x02\x02\x02\'\x9B"+
		"\x03\x02\x02\x02)\x9D\x03\x02\x02\x02+\xA2\x03\x02\x02\x02-\xA8\x03\x02"+
		"\x02\x02/\xB2\x03\x02\x02\x021\xBD\x03\x02\x02\x023\xBF\x03\x02\x02\x02"+
		"5\xC8\x03\x02\x02\x027\xCA\x03\x02\x02\x029:\x07*\x02\x02:\x04\x03\x02"+
		"\x02\x02;<\x07+\x02\x02<\x06\x03\x02\x02\x02=>\x07}\x02\x02>\b\x03\x02"+
		"\x02\x02?@\x07.\x02\x02@\n\x03\x02\x02\x02AB\x07\x7F\x02\x02B\f\x03\x02"+
		"\x02\x02CD\x07]\x02\x02D\x0E\x03\x02\x02\x02EF\x07_\x02\x02F\x10\x03\x02"+
		"\x02\x02GH\x07<\x02\x02H\x12\x03\x02\x02\x02IL\x05\x15\v\x02JL\x05\x17"+
		"\f\x02KI\x03\x02\x02\x02KJ\x03\x02\x02\x02L\x14\x03\x02\x02\x02MN\x07"+
		"1\x02\x02NO\x071\x02\x02OS\x03\x02\x02\x02PR\n\x02\x02\x02QP\x03\x02\x02"+
		"\x02RU\x03\x02\x02\x02SQ\x03\x02\x02\x02ST\x03\x02\x02\x02TV\x03\x02\x02"+
		"\x02US\x03\x02\x02\x02VW\b\v\x02\x02W\x16\x03\x02\x02\x02XY\x071\x02\x02"+
		"YZ\x07,\x02\x02Z^\x03\x02\x02\x02[]\v\x02\x02\x02\\[\x03\x02\x02\x02]"+
		"`\x03\x02\x02\x02^_\x03\x02\x02\x02^\\\x03\x02\x02\x02_a\x03\x02\x02\x02"+
		"`^\x03\x02\x02\x02ab\x07,\x02\x02bc\x071\x02\x02cd\x03\x02\x02\x02de\b"+
		"\f\x02\x02e\x18\x03\x02\x02\x02fg\x07p\x02\x02gh\x07w\x02\x02hi\x07n\x02"+
		"\x02ij\x07n\x02\x02j\x1A\x03\x02\x02\x02kl\x07v\x02\x02lm\x07t\x02\x02"+
		"mn\x07w\x02\x02nu\x07g\x02\x02op\x07h\x02\x02pq\x07c\x02\x02qr\x07n\x02"+
		"\x02rs\x07u\x02\x02su\x07g\x02\x02tk\x03\x02\x02\x02to\x03\x02\x02\x02"+
		"u\x1C\x03\x02\x02\x02vw\x051\x19\x02w{\x070\x02\x02xz\x055\x1B\x02yx\x03"+
		"\x02\x02\x02z}\x03\x02\x02\x02{y\x03\x02\x02\x02{|\x03\x02\x02\x02|\x7F"+
		"\x03\x02\x02\x02}{\x03\x02\x02\x02~\x80\x053\x1A\x02\x7F~\x03\x02\x02"+
		"\x02\x7F\x80\x03\x02\x02\x02\x80\x8F\x03\x02\x02\x02\x81\x83\x070\x02"+
		"\x02\x82\x84\x055\x1B\x02\x83\x82\x03\x02\x02\x02\x84\x85\x03\x02\x02"+
		"\x02\x85\x83\x03\x02\x02\x02\x85\x86\x03\x02\x02\x02\x86\x88\x03\x02\x02"+
		"\x02\x87\x89\x053\x1A\x02\x88\x87\x03\x02\x02\x02\x88\x89\x03\x02\x02"+
		"\x02\x89\x8F\x03\x02\x02\x02\x8A\x8C\x051\x19\x02\x8B\x8D\x053\x1A\x02"+
		"\x8C\x8B\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x8F\x03\x02\x02\x02"+
		"\x8Ev\x03\x02\x02\x02\x8E\x81\x03\x02\x02\x02\x8E\x8A\x03\x02\x02\x02"+
		"\x8F\x1E\x03\x02\x02\x02\x90\x91\t\x02\x02\x02\x91\x92\x03\x02\x02\x02"+
		"\x92\x93\b\x10\x02\x02\x93 \x03\x02\x02\x02\x94\x95\x07=\x02\x02\x95\""+
		"\x03\x02\x02\x02\x96\x97\x070\x02\x02\x97$\x03\x02\x02\x02\x98\x99\x07"+
		"f\x02\x02\x99\x9A\x07d\x02\x02\x9A&\x03\x02\x02\x02\x9B\x9C\x07\f\x02"+
		"\x02\x9C(\x03\x02\x02\x02\x9D\x9E\x07\x0F\x02\x02\x9E\x9F\x07\f\x02\x02"+
		"\x9F*\x03\x02\x02\x02\xA0\xA3\n\x03\x02\x02\xA1\xA3\x05/\x18\x02\xA2\xA0"+
		"\x03\x02\x02\x02\xA2\xA1\x03\x02\x02\x02\xA3\xA4\x03\x02\x02\x02\xA4\xA2"+
		"\x03\x02\x02\x02\xA4\xA5\x03\x02\x02\x02\xA5\xA6\x03\x02\x02\x02\xA6\xA7"+
		"\x06\x16\x02\x02\xA7,\x03\x02\x02\x02\xA8\xAD\x07$\x02\x02\xA9\xAC\n\x04"+
		"\x02\x02\xAA\xAC\x05/\x18\x02\xAB\xA9\x03\x02\x02\x02\xAB\xAA\x03\x02"+
		"\x02\x02\xAC\xAF\x03\x02\x02\x02\xAD\xAB\x03\x02\x02\x02\xAD\xAE\x03\x02"+
		"\x02\x02\xAE\xB0\x03\x02\x02\x02\xAF\xAD\x03\x02\x02\x02\xB0\xB1\x07$"+
		"\x02\x02\xB1.\x03\x02\x02\x02\xB2\xB3\x07^\x02\x02\xB3\xB4\t\x04\x02\x02"+
		"\xB40\x03\x02\x02\x02\xB5\xBE\x072\x02\x02\xB6\xBA\t\x05\x02\x02\xB7\xB9"+
		"\x055\x1B\x02\xB8\xB7\x03\x02\x02\x02\xB9\xBC\x03\x02\x02\x02\xBA\xB8"+
		"\x03\x02\x02\x02\xBA\xBB\x03\x02\x02\x02\xBB\xBE\x03\x02\x02\x02\xBC\xBA"+
		"\x03\x02\x02\x02\xBD\xB5\x03\x02\x02\x02\xBD\xB6\x03\x02\x02\x02\xBE2"+
		"\x03\x02\x02\x02\xBF\xC1\t\x06\x02\x02\xC0\xC2\t\x07\x02\x02\xC1\xC0\x03"+
		"\x02\x02\x02\xC1\xC2\x03\x02\x02\x02\xC2\xC4\x03\x02\x02\x02\xC3\xC5\x05"+
		"5\x1B\x02\xC4\xC3\x03\x02\x02\x02\xC5\xC6\x03\x02\x02\x02\xC6\xC4\x03"+
		"\x02\x02\x02\xC6\xC7\x03\x02\x02\x02\xC74\x03\x02\x02\x02\xC8\xC9\t\b"+
		"\x02\x02\xC96\x03\x02\x02\x02\xCA\xCB\t\t\x02\x02\xCB\xCC\x03\x02\x02"+
		"\x02\xCC\xCD\b\x1C\x03\x02\xCD8\x03\x02\x02\x02\x15\x02KS^t{\x7F\x85\x88"+
		"\x8C\x8E\xA2\xA4\xAB\xAD\xBA\xBD\xC1\xC6\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!mongoLexer.__ATN) {
			mongoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(mongoLexer._serializedATN));
		}

		return mongoLexer.__ATN;
	}

}

