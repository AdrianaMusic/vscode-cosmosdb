// Generated from ./grammar/mongo.g4 by ANTLR 4.6-SNAPSHOT


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

 /*tslint:disable */


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class mongoLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly T__8=9;
	public static readonly T__9=10;
	public static readonly T__10=11;
	public static readonly RegexLiteral=12;
	public static readonly SingleLineComment=13;
	public static readonly MultiLineComment=14;
	public static readonly StringLiteral=15;
	public static readonly NullLiteral=16;
	public static readonly BooleanLiteral=17;
	public static readonly NumericLiteral=18;
	public static readonly DecimalLiteral=19;
	public static readonly LineTerminator=20;
	public static readonly SEMICOLON=21;
	public static readonly DOT=22;
	public static readonly DB=23;
	public static readonly IDENTIFIER=24;
	public static readonly DOUBLE_QUOTED_STRING_LITERAL=25;
	public static readonly SINGLE_QUOTED_STRING_LITERAL=26;
	public static readonly WHITESPACE=27;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "RegexLiteral", "RegexFlag", "SingleLineComment", "MultiLineComment", 
		"StringLiteral", "NullLiteral", "BooleanLiteral", "NumericLiteral", "DecimalLiteral", 
		"LineTerminator", "SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "STRING_ESCAPE", "DecimalIntegerLiteral", 
		"ExponentPart", "DecimalDigit", "WHITESPACE"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'rs'", "'sh'", "'BULK'", "'('", "','", "')'", "'{'", "'}'", 
		"'['", "']'", "':'", undefined, undefined, undefined, undefined, "'null'", 
		undefined, undefined, undefined, undefined, "';'", "'.'", "'db'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "RegexLiteral", 
		"SingleLineComment", "MultiLineComment", "StringLiteral", "NullLiteral", 
		"BooleanLiteral", "NumericLiteral", "DecimalLiteral", "LineTerminator", 
		"SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "WHITESPACE"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(mongoLexer._LITERAL_NAMES, mongoLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return mongoLexer.VOCABULARY;
	}


		private isExternalIdentifierText(text) {
			return text === 'db';
		}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(mongoLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "mongo.g4"; }

	@Override
	public get ruleNames(): string[] { return mongoLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return mongoLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return mongoLexer.modeNames; }

	@Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 24:
			return this.IDENTIFIER_sempred(_localctx, predIndex);
		}
		return true;
	}
	private IDENTIFIER_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return !this.isExternalIdentifierText(this.text)
				;
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1D\u0103\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x03\x02"+
		"\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04"+
		"\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03"+
		"\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x05"+
		"\rc\n\r\x03\r\x03\r\x03\r\x07\rh\n\r\f\r\x0E\rk\v\r\x03\r\x03\r\x07\r"+
		"o\n\r\f\r\x0E\rr\v\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x07"+
		"\x0Fz\n\x0F\f\x0F\x0E\x0F}\v\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10"+
		"\x03\x10\x07\x10\x85\n\x10\f\x10\x0E\x10\x88\v\x10\x03\x10\x03\x10\x03"+
		"\x10\x03\x10\x03\x10\x03\x11\x03\x11\x05\x11\x91\n\x11\x03\x12\x03\x12"+
		"\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13"+
		"\x03\x13\x03\x13\x03\x13\x05\x13\xA1\n\x13\x03\x14\x05\x14\xA4\n\x14\x03"+
		"\x14\x03\x14\x03\x15\x03\x15\x03\x15\x06\x15\xAB\n\x15\r\x15\x0E\x15\xAC"+
		"\x03\x15\x05\x15\xB0\n\x15\x03\x15\x03\x15\x06\x15\xB4\n\x15\r\x15\x0E"+
		"\x15\xB5\x03\x15\x05\x15\xB9\n\x15\x03\x15\x03\x15\x05\x15\xBD\n\x15\x05"+
		"\x15\xBF\n\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18"+
		"\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x06\x1A\xCE\n\x1A\r\x1A"+
		"\x0E\x1A\xCF\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x07\x1B\xD7\n\x1B"+
		"\f\x1B\x0E\x1B\xDA\v\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x07\x1C"+
		"\xE1\n\x1C\f\x1C\x0E\x1C\xE4\v\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03"+
		"\x1D\x03\x1E\x03\x1E\x03\x1E\x07\x1E\xEE\n\x1E\f\x1E\x0E\x1E\xF1\v\x1E"+
		"\x05\x1E\xF3\n\x1E\x03\x1F\x03\x1F\x05\x1F\xF7\n\x1F\x03\x1F\x06\x1F\xFA"+
		"\n\x1F\r\x1F\x0E\x1F\xFB\x03 \x03 \x03!\x03!\x03!\x03!\x03\x86\x02\x02"+
		"\"\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F"+
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x02"+
		"\x1D\x02\x0F\x1F\x02\x10!\x02\x11#\x02\x12%\x02\x13\'\x02\x14)\x02\x15"+
		"+\x02\x16-\x02\x17/\x02\x181\x02\x193\x02\x1A5\x02\x1B7\x02\x1C9\x02\x02"+
		";\x02\x02=\x02\x02?\x02\x02A\x02\x1D\x03\x02\x0F\x06\x02\f\f\x0F\x0F,"+
		",11\x05\x02\f\f\x0F\x0F11\x07\x02iikkooww{{\x05\x02\f\f\x0F\x0F\u202A"+
		"\u202B\f\x02\v\f\x0F\x0F\"\"$$)+.0<=]_}}\x7F\x7F\x04\x02$$^^\x04\x02)"+
		")^^\x05\x02$$))^^\x03\x023;\x04\x02GGgg\x04\x02--//\x03\x022;\x04\x02"+
		"\v\v\"\"\u0117\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07"+
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03"+
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03"+
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03"+
		"\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03"+
		"\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02"+
		"\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02"+
		"/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02"+
		"\x02\x02\x027\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x03C\x03\x02\x02\x02"+
		"\x05F\x03\x02\x02\x02\x07I\x03\x02\x02\x02\tN\x03\x02\x02\x02\vP\x03\x02"+
		"\x02\x02\rR\x03\x02\x02\x02\x0FT\x03\x02\x02\x02\x11V\x03\x02\x02\x02"+
		"\x13X\x03\x02\x02\x02\x15Z\x03\x02\x02\x02\x17\\\x03\x02\x02\x02\x19^"+
		"\x03\x02\x02\x02\x1Bs\x03\x02\x02\x02\x1Du\x03\x02\x02\x02\x1F\x80\x03"+
		"\x02\x02\x02!\x90\x03\x02\x02\x02#\x92\x03\x02\x02\x02%\xA0\x03\x02\x02"+
		"\x02\'\xA3\x03\x02\x02\x02)\xBE\x03\x02\x02\x02+\xC0\x03\x02\x02\x02-"+
		"\xC4\x03\x02\x02\x02/\xC6\x03\x02\x02\x021\xC8\x03\x02\x02\x023\xCD\x03"+
		"\x02\x02\x025\xD3\x03\x02\x02\x027\xDD\x03\x02\x02\x029\xE7\x03\x02\x02"+
		"\x02;\xF2\x03\x02\x02\x02=\xF4\x03\x02\x02\x02?\xFD\x03\x02\x02\x02A\xFF"+
		"\x03\x02\x02\x02CD\x07t\x02\x02DE\x07u\x02\x02E\x04\x03\x02\x02\x02FG"+
		"\x07u\x02\x02GH\x07j\x02\x02H\x06\x03\x02\x02\x02IJ\x07D\x02\x02JK\x07"+
		"W\x02\x02KL\x07N\x02\x02LM\x07M\x02\x02M\b\x03\x02\x02\x02NO\x07*\x02"+
		"\x02O\n\x03\x02\x02\x02PQ\x07.\x02\x02Q\f\x03\x02\x02\x02RS\x07+\x02\x02"+
		"S\x0E\x03\x02\x02\x02TU\x07}\x02\x02U\x10\x03\x02\x02\x02VW\x07\x7F\x02"+
		"\x02W\x12\x03\x02\x02\x02XY\x07]\x02\x02Y\x14\x03\x02\x02\x02Z[\x07_\x02"+
		"\x02[\x16\x03\x02\x02\x02\\]\x07<\x02\x02]\x18\x03\x02\x02\x02^b\x071"+
		"\x02\x02_c\n\x02\x02\x02`a\x07^\x02\x02ac\x071\x02\x02b_\x03\x02\x02\x02"+
		"b`\x03\x02\x02\x02ci\x03\x02\x02\x02dh\n\x03\x02\x02ef\x07^\x02\x02fh"+
		"\x071\x02\x02gd\x03\x02\x02\x02ge\x03\x02\x02\x02hk\x03\x02\x02\x02ig"+
		"\x03\x02\x02\x02ij\x03\x02\x02\x02jl\x03\x02\x02\x02ki\x03\x02\x02\x02"+
		"lp\x071\x02\x02mo\x05\x1B\x0E\x02nm\x03\x02\x02\x02or\x03\x02\x02\x02"+
		"pn\x03\x02\x02\x02pq\x03\x02\x02\x02q\x1A\x03\x02\x02\x02rp\x03\x02\x02"+
		"\x02st\t\x04\x02\x02t\x1C\x03\x02\x02\x02uv\x071\x02\x02vw\x071\x02\x02"+
		"w{\x03\x02\x02\x02xz\n\x05\x02\x02yx\x03\x02\x02\x02z}\x03\x02\x02\x02"+
		"{y\x03\x02\x02\x02{|\x03\x02\x02\x02|~\x03\x02\x02\x02}{\x03\x02\x02\x02"+
		"~\x7F\b\x0F\x02\x02\x7F\x1E\x03\x02\x02\x02\x80\x81\x071\x02\x02\x81\x82"+
		"\x07,\x02\x02\x82\x86\x03\x02\x02\x02\x83\x85\v\x02\x02\x02\x84\x83\x03"+
		"\x02\x02\x02\x85\x88\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02\x86\x84\x03"+
		"\x02\x02\x02\x87\x89\x03\x02\x02\x02\x88\x86\x03\x02\x02\x02\x89\x8A\x07"+
		",\x02\x02\x8A\x8B\x071\x02\x02\x8B\x8C\x03\x02\x02\x02\x8C\x8D\b\x10\x02"+
		"\x02\x8D \x03\x02\x02\x02\x8E\x91\x057\x1C\x02\x8F\x91\x055\x1B\x02\x90"+
		"\x8E\x03\x02\x02\x02\x90\x8F\x03\x02\x02\x02\x91\"\x03\x02\x02\x02\x92"+
		"\x93\x07p\x02\x02\x93\x94\x07w\x02\x02\x94\x95\x07n\x02\x02\x95\x96\x07"+
		"n\x02\x02\x96$\x03\x02\x02\x02\x97\x98\x07v\x02\x02\x98\x99\x07t\x02\x02"+
		"\x99\x9A\x07w\x02\x02\x9A\xA1\x07g\x02\x02\x9B\x9C\x07h\x02\x02\x9C\x9D"+
		"\x07c\x02\x02\x9D\x9E\x07n\x02\x02\x9E\x9F\x07u\x02\x02\x9F\xA1\x07g\x02"+
		"\x02\xA0\x97\x03\x02\x02\x02\xA0\x9B\x03\x02\x02\x02\xA1&\x03\x02\x02"+
		"\x02\xA2\xA4\x07/\x02\x02\xA3\xA2\x03\x02\x02\x02\xA3\xA4\x03\x02\x02"+
		"\x02\xA4\xA5\x03\x02\x02\x02\xA5\xA6\x05)\x15\x02\xA6(\x03\x02\x02\x02"+
		"\xA7\xA8\x05;\x1E\x02\xA8\xAA\x070\x02\x02\xA9\xAB\x05? \x02\xAA\xA9\x03"+
		"\x02\x02\x02\xAB\xAC\x03\x02\x02\x02\xAC\xAA\x03\x02\x02\x02\xAC\xAD\x03"+
		"\x02\x02\x02\xAD\xAF\x03\x02\x02\x02\xAE\xB0\x05=\x1F\x02\xAF\xAE\x03"+
		"\x02\x02\x02\xAF\xB0\x03\x02\x02\x02\xB0\xBF\x03\x02\x02\x02\xB1\xB3\x07"+
		"0\x02\x02\xB2\xB4\x05? \x02\xB3\xB2\x03\x02\x02\x02\xB4\xB5\x03\x02\x02"+
		"\x02\xB5\xB3\x03\x02\x02\x02\xB5\xB6\x03\x02\x02\x02\xB6\xB8\x03\x02\x02"+
		"\x02\xB7\xB9\x05=\x1F\x02\xB8\xB7\x03\x02\x02\x02\xB8\xB9\x03\x02\x02"+
		"\x02\xB9\xBF\x03\x02\x02\x02\xBA\xBC\x05;\x1E\x02\xBB\xBD\x05=\x1F\x02"+
		"\xBC\xBB\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBF\x03\x02\x02\x02"+
		"\xBE\xA7\x03\x02\x02\x02\xBE\xB1\x03\x02\x02\x02\xBE\xBA\x03\x02\x02\x02"+
		"\xBF*\x03\x02\x02\x02\xC0\xC1\t\x05\x02\x02\xC1\xC2\x03\x02\x02\x02\xC2"+
		"\xC3\b\x16\x02\x02\xC3,\x03\x02\x02\x02\xC4\xC5\x07=\x02\x02\xC5.\x03"+
		"\x02\x02\x02\xC6\xC7\x070\x02\x02\xC70\x03\x02\x02\x02\xC8\xC9\x07f\x02"+
		"\x02\xC9\xCA\x07d\x02\x02\xCA2\x03\x02\x02\x02\xCB\xCE\n\x06\x02\x02\xCC"+
		"\xCE\x059\x1D\x02\xCD\xCB\x03\x02\x02\x02\xCD\xCC\x03\x02\x02\x02\xCE"+
		"\xCF\x03\x02\x02\x02\xCF\xCD\x03\x02\x02\x02\xCF\xD0\x03\x02\x02\x02\xD0"+
		"\xD1\x03\x02\x02\x02\xD1\xD2\x06\x1A\x02\x02\xD24\x03\x02\x02\x02\xD3"+
		"\xD8\x07$\x02\x02\xD4\xD7\n\x07\x02\x02\xD5\xD7\x059\x1D\x02\xD6\xD4\x03"+
		"\x02\x02\x02\xD6\xD5\x03\x02\x02\x02\xD7\xDA\x03\x02\x02\x02\xD8\xD6\x03"+
		"\x02\x02\x02\xD8\xD9\x03\x02\x02\x02\xD9\xDB\x03\x02\x02\x02\xDA\xD8\x03"+
		"\x02\x02\x02\xDB\xDC\x07$\x02\x02\xDC6\x03\x02\x02\x02\xDD\xE2\x07)\x02"+
		"\x02\xDE\xE1\n\b\x02\x02\xDF\xE1\x059\x1D\x02\xE0\xDE\x03\x02\x02\x02"+
		"\xE0\xDF\x03\x02\x02\x02\xE1\xE4\x03\x02\x02\x02\xE2\xE0\x03\x02\x02\x02"+
		"\xE2\xE3\x03\x02\x02\x02\xE3\xE5\x03\x02\x02\x02\xE4\xE2\x03\x02\x02\x02"+
		"\xE5\xE6\x07)\x02\x02\xE68\x03\x02\x02\x02\xE7\xE8\x07^\x02\x02\xE8\xE9"+
		"\t\t\x02\x02\xE9:\x03\x02\x02\x02\xEA\xF3\x072\x02\x02\xEB\xEF\t\n\x02"+
		"\x02\xEC\xEE\x05? \x02\xED\xEC\x03\x02\x02\x02\xEE\xF1\x03\x02\x02\x02"+
		"\xEF\xED\x03\x02\x02\x02\xEF\xF0\x03\x02\x02\x02\xF0\xF3\x03\x02\x02\x02"+
		"\xF1\xEF\x03\x02\x02\x02\xF2\xEA\x03\x02\x02\x02\xF2\xEB\x03\x02\x02\x02"+
		"\xF3<\x03\x02\x02\x02\xF4\xF6\t\v\x02\x02\xF5\xF7\t\f\x02\x02\xF6\xF5"+
		"\x03\x02\x02\x02\xF6\xF7\x03\x02\x02\x02\xF7\xF9\x03\x02\x02\x02\xF8\xFA"+
		"\x05? \x02\xF9\xF8\x03\x02\x02\x02\xFA\xFB\x03\x02\x02\x02\xFB\xF9\x03"+
		"\x02\x02\x02\xFB\xFC\x03\x02\x02\x02\xFC>\x03\x02\x02\x02\xFD\xFE\t\r"+
		"\x02\x02\xFE@\x03\x02\x02\x02\xFF\u0100\t\x0E\x02\x02\u0100\u0101\x03"+
		"\x02\x02\x02\u0101\u0102\b!\x03\x02\u0102B\x03\x02\x02\x02\x1C\x02bgi"+
		"p{\x86\x90\xA0\xA3\xAC\xAF\xB5\xB8\xBC\xBE\xCD\xCF\xD6\xD8\xE0\xE2\xEF"+
		"\xF2\xF6\xFB\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!mongoLexer.__ATN) {
			mongoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(mongoLexer._serializedATN));
		}

		return mongoLexer.__ATN;
	}

}

